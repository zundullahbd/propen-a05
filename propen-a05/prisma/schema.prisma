// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider     = "postgresql"
    url          = env("DB_URL")
    relationMode = "prisma"
}

model Brand {
    id          String    @id @default(uuid())
    name        String
    description String
    phone       String
    website     String

    service   String?
    facebook  String?
    instagram String?
    twitter   String?
    image     String?

    Category Category[]
    Product  Product[]

    sales   User? @relation(fields: [salesId], references: [id])
    salesId String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([salesId])
}

model Category {
    id   String    @id @default(uuid())
    name String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    brand   Brand @relation(fields: [brandId], references: [id])
    brandId String

    @@index([brandId])
}

model Product {
    id        String      @id @default(uuid())
    title     String
    price     Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    brandName String

    brand   Brand? @relation(fields: [brandId], references: [id])
    brandId String?

    Sales Sales[]

    @@index([brandId])
}

model Sales {
    id              String    @id @default(uuid())
    outlet          String
    number          String
    name            String
    code            String
    referenceNumber String
    date            String
    createdTime     String
    due             String
    amount          Int
    payment         String
    fulfillment     String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Ticket Ticket[]
    Review Review[]

    Product   Product @relation(fields: [productId], references: [id])
    productId String

    Customer   Customer? @relation(fields: [customerId], references: [id])
    customerId String?

    @@index([productId])
    @@index([customerId])
}

model Ticket {
    id          String         @id @default(uuid())
    title       String
    category    TicketCategory @default(KOMPLAIN)
    description String         @default("")
    status      Status         @default(SUBMITTED)
    createdAt   DateTime       @default(now())
    updatedAt   DateTime       @updatedAt

    customer   Customer @relation(fields: [customerId], references: [id])
    customerId String

    sales   Sales @relation(fields: [salesId], references: [id])
    salesId String

    Review Review?

    @@index([customerId])
    @@index([salesId])
}

enum Status {
    SUBMITTED
    REVIEWED
    INPROGRESS
    RESOLVED
    CLOSED
}

enum TicketCategory {
    KOMPLAIN
    INFORMASI
    GARANSI
}

model Review {
    id     String     @id @default(uuid())
    stars  Int
    review String?

    attitude      Boolean @default(false)
    speed         Boolean @default(false)
    communication Boolean @default(false)
    outcome       Boolean @default(false)
    efficiency    Boolean @default(false)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    customer   Customer @relation(fields: [customerId], references: [id])
    customerId String

    ticket   Ticket @relation(fields: [ticketId], references: [id])
    ticketId String @unique

    Sales   Sales? @relation(fields: [salesId], references: [id])
    salesId String?

    @@index([ticketId])
    @@index([customerId])
    @@index([salesId])
}

enum Role {
    CustomerService
    Sales
    Executive
    Admin
}

model User {
    id        String      @id @default(uuid())
    username  String   @unique
    email     String   @unique
    password  String
    role      Role     @default(Admin)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    Brand     Brand[]
}

model Customer {
    id              String      @id @default(uuid())
    outlet          String
    number          String
    name            String
    code            String
    referenceNumber String
    date            String
    createdTime     String
    due             String
    amount          Int
    payment         String
    fulfillment     String
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt

    Ticket Ticket[]
    Sales  Sales[]
    Review Review[]
}

model Article {
    id    String    @id @default(uuid())
    title String
    text  String
}